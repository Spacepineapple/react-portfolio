[
    {
        "id": "1",
        "name": "InfoTravel Travel Information",
        "image": "/react-portfolio/images/InfoTravel.png",
        "short": "A travel information service bringing together useful information from a range of free APIs to support would-be travellers in choosing their next destination",
        "description": "InfoTravel was designed and built as a group project as part of an edX Front End Web Development bootcamp. It is a travel information service that allows users to get all of the information they need about travel destinations with a single search. Using existing free API services, Infotravel dynamically gathers and renders information including currency exchange details, local news, sightseeing opportunities, weather and other useful data such as local language.",
        "technologies": "HTML, CSS, JavaScript, BootStrap",
        "deployed": "https://spacepineapple.github.io/infotravel-travel-information/",
        "repository": "https://github.com/Spacepineapple/infotravel-travel-information"
    },
    {
        "id": "2",
        "name": "Snake",
        "image": "/react-portfolio/images/python_snake.png",
        "short": "A playable implementation of the classic game Snake with the functionality to store and retrieve the player's highest score",
        "description": "A complete and playable snake game built in Python using the Turtle Graphics package. Scores by writing to and reading from a text file. The player must collect the food while ensuring the snake does not touch the edges of the window and also does not cause any part of the snake to touch any other part.",
        "technologies": "Python",
        "deployed": "This project has not been deployed, but can be accessed by downloading and running the files from the repository",
        "repository": "https://github.com/Spacepineapple/python-snake"
    },
    {
        "id": "3",
        "name": "FlashCard App",
        "image": "/react-portfolio/images/flashcard_app.png",
        "short": "A flashcard app to support me with learning Japanese with functionality to keep track of and remove words after mastery",
        "description": "A flashcard application to help the user learn a language. The app takes a CSV file containing text in the target language and the user's own language. A word in the target language is then chosen at random and shown to the user who can use three buttons -- one to flip the card between the target language and their own language, one to save the word for the future and another to remove it from the CSV file after they have learnt it.",
        "technologies": "Python",
        "deployed": "This project has not been deployed, but can be accessed by downloading and running the files from the repository",
        "repository": "https://github.com/Spacepineapple/flashcard-app"    
    },
    {
        "id": "4",
        "name": "Pong",
        "image": "/react-portfolio/images/pong.png",
        "short": "A fully functional, playable implementtion of the classic game Pong with support for 2 players",
        "description": "A playable implementation of the classic game Pong built in Rust. The game responds to key presses and supports two players with one using the arrow keys and the other using the w and s keys.",
        "technologies": "Python",
        "deployed": "This project has not been deployed, but can be accessed by downloading and running the files from the repository",
        "repository": "https://github.com/Spacepineapple/pong"
    },
    {
        "id": "5",
        "name": "Password Generator",
        "image": "/react-portfolio/images/PasswordGenerator.png",
        "short": "A password generator application that will generate a random password based on parameters selected by the user",
        "description": "This is a password generator app. The user is able to select parameters for the generated password including the number of characters, as well as types of character from options including upper and lower case characters, numbers and special characters. A randomised password will then be generated and can easily be copied by clicking within the window. If the user fails to select character types for inclusion or does not select a valid length, no password will be generated and the user will be prompted to select again.",
        "technologies": "HTML, CSS, JavaScript, BootStrap",
        "deployed": "https://spacepineapple.github.io/password-generator/",
        "repository": "https://github.com/Spacepineapple/password-generator"
    },
    {
        "id": "6",
        "name": "Daily Schedule Planner",
        "short": "A scheduled planner designed to help plan out the typical working day with persistent data and handy colour coding",
        "image": "/react-portfolio/images/SchedulePlanner.png",
        "description": "This is a daily schedule planner for the working day that stores scheduled events in local storage to ensure persistent scheduling. The planner uses moment.js to capture the date on which the user opens the scheduler and uses colour coding to identify which hourly periods have already occurred on that day with past blocks in grey, the current block in red and future blocks in green.",
        "technologies": "HTML, CSS, JavaScript, BootStrap",
        "deployed": "https://spacepineapple.github.io/daily-schedule-planner/",
        "repository": "https://github.com/Spacepineapple/daily-schedule-planner"
    }
]